2018-12-17
https://ko.wikipedia.org/wiki/%EA%B0%9D%EC%B2%B4_(%EC%BB%B4%ED%93%A8%ED%84%B0_%EA%B3%BC%ED%95%99)

컴퓨터 과학에서
객체 또는 오브젝트(object)는
1. 저장공간에 할당되어 값을 가진다 &&
2. 식별자(id)에 의해 참조되는 공간

값을 가져야 객체
ex) int a = 3
a는 id
요소는 index로 찾음 (식별자에의해 참조X)

 변수, 자료 구조(배열), 함수 또는 메소드가 객체가 될 수 있다 [배열과 요소는 다름]
 변수를 이용해 (클래스)객체  -> 리얼월드 객체 ->디스크에 있는 객체에 접근
 
 ->클래스객체 on 디스크 -> 클래스
 ->가상객체 on 메모리 ->인스턴스
 
 메모리가 할당되기 전까지 (가상)객체는 존재하지 않는다
 
 클래스 객체는 자료와 그 자료를 다루는 명령의 조합을 포함하여 객체가 메시지를 받고 자료를 처리하며 메시지를 다른 객체로 보낼 수 있도록 한다.
 실세계의 유추로 설명하자면,
 만약 어떤 사람이 집에서 살기를 원할 때, 그 집의 청사진(집의 사진)이나 축소 모형 따위는 전혀 필요가 없다.
 필요한 것은 설계에 맞는 실제 집이다. 이 유추에서 청사진은 클래스를 나타내고 실제 집은 객체를 나타낸다
 
 class는 fields + methods(area) + constructors
 
 real-world objects : ex)아바타
 
 -------------------------------------------------------------------------------------------------------
 메소드의 선언구조
 
 public String test(String a){} --->여기서의 a는 파라미터
 접근제한 + 리턴타입 + ID+(파라미터)   + {에어리어}
 m.test(a); --> 여기서의 a는 아규먼트(실제값) 
 
 // 리턴타입
결과가 없으면 void
결과가 있으면 String, int,....., Member

리턴타입이 없는 경우와 있는 경우
리턴타입이 void인 경우와 아닌 경우
누가 판단하나? 개발자의 판단